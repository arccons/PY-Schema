"""
Django settings for API project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# Access environment variables
SECRET_KEY = os.getenv('SECRET_KEY')
DEBUG = os.getenv('DEBUG') == 'True'
""" DB_HOST=os.getenv('DB_HOST')
MSSQL_DATABASE = os.getenv('MSSQL_DATABASE')
MSSQL_DB_DRIVER = os.getenv('MSSQL_DB_DRIVER')
MSSQL_TRUSTED_CONNECTION = os.getenv('MSSQL_TRUSTED_CONNECTION') """

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = 'django-insecure-!&cp+y4nm1)h2@0!2$7wj8b01_hegru2-1_w9i@@91+(g5anh1'

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True

ALLOWED_HOSTS = []
CORS_ALLOWED_ORIGINS = [
    "http://localhost",
    "https://localhost",
    "http://localhost:3000",
    "https://localhost:3000",
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'SchemaCheck',
]

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.MultiPartParser',
    ]
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'API.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'API.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

""" DB='mssql'
MSSQL_DB_HOST='DESKTOP-ALT0UH5'
MSSQL_ENGINE='mssql'
MSSQL_DATABASE='SchemaCheck'
MSSQL_DB_DRIVER='ODBC Driver 17 for SQL Server'
MSSQL_TRUSTED_CONNECTION='yes'
PGSQL_ENGINE='django.db.backends.postgresql' #'django.db.backends.postgresql_psycopg2'
PGSQL_DB_HOST='localhost'
PGSQL_DATABASE='SchemaCheck'
PGSQL_USER='postgres'
PGSQL_PASSWD='admin'
PGSQL_PORT=5432 """

if os.getenv('DB') == 'mssql':
    DB1 = 'default'
    DB2 = 'postgres'
elif os.getenv('DB') == 'pgsql':
    DB1 = 'postgres'
    DB2 = 'default'

DATABASES = {
    DB1: {
        'ENGINE': 'mssql',
        'NAME': os.getenv("MSSQL_DATABASE"), #'SchemaCheck',
        'HOST': os.getenv("MSSQL_DB_HOST"), #'DESKTOP-ALT0UH5',
        'OPTIONS': {
                'driver': os.getenv("MSSQL_DB_DRIVER"), #'ODBC Driver 17 for SQL Server',
                'Trusted_Connection': os.getenv("MSSQL_TRUSTED_CONNECTION"), #'yes',
                },
    },
    DB2: {
        "ENGINE": os.getenv("PGSQL_ENGINE"),
        "NAME": os.getenv("PGSQL_DATABASE"),
        "USER": os.getenv("PGSQL_USER"),
        "PASSWORD": os.getenv("PGSQL_PASSWD"),
        "HOST": os.getenv("PGSQL_DB_HOST"),
        "PORT": os.getenv("PGSQL_PORT"),
    },
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
